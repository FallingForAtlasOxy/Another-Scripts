local flag = false;
local Player = game.Players.LocalPlayer
local Character = Player.Character
local humanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

local PlanterGUIv11 = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TitleLabel = Instance.new("TextLabel")
local AutoHarvest = Instance.new("TextButton")
local AutoPlant = Instance.new("TextButton")
local PlotBuilder = Instance.new("TextButton")
local FarmingLabel = Instance.new("TextLabel")
local PlantType = Instance.new("TextBox")
local Instruction = Instance.new("TextLabel")

PlanterGUIv11.Name = "Planter GUI v1.1"
PlanterGUIv11.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
PlanterGUIv11.DisplayOrder = 10

MainFrame.Name = "MainFrame"
MainFrame.Parent = PlanterGUIv11
MainFrame.BackgroundColor3 = Color3.fromRGB(79, 79, 79)
MainFrame.BackgroundTransparency = 0.500
MainFrame.BorderSizePixel = 4
MainFrame.Position = UDim2.new(0.0744000003, 0, 0.42892459, 0)
MainFrame.Size = UDim2.new(0.156799972, 0, 0.247218788, 0)
-- draggable function
 
local UserInputService = game:GetService("UserInputService")
 
       local gui = MainFrame
 
       local dragging
       local dragInput
       local dragStart
       local startPos
 
       local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
       end
 
       gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = gui.Position
 
        input.Changed:Connect(function()
        if input.UserInputState == Enum.UserInputState.End then
        dragging = false
        end
        end)
        end
       end)
 
       gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
        end
       end)
 
       UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
        update(input)
        end
       end)
--end of draggable function

TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = MainFrame
TitleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.BackgroundTransparency = 1.000
TitleLabel.Position = UDim2.new(0.24, 0, 0.1, 0)
TitleLabel.Size = UDim2.new(0, 172, 0, 29)
TitleLabel.Font = Enum.Font.Unknown
TitleLabel.Text = "Farmer GUI v1.1"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.TextSize = 23.000
TitleLabel.TextWrapped = true

PlantType.Name = "PlantType"
PlantType.Parent = MainFrame
PlantType.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlantType.BackgroundTransparency = 0.750
PlantType.BorderColor3 = Color3.fromRGB(255, 255, 255)
PlantType.BorderSizePixel = 0
PlantType.Position = UDim2.new(0.505102098, 0, 0.584999979, 0)
PlantType.Size = UDim2.new(0, 84, 0, 23)
PlantType.Font = Enum.Font.Roboto
PlantType.Text = "Crop Type"
PlantType.TextColor3 = Color3.fromRGB(255, 255, 255)
PlantType.TextSize = 14.000

local function getShovel()
    for i, tool in ipairs(Player.Backpack:GetChildren()) do
        for j, item in ipairs(tool:WaitForChild("toolModel"):GetChildren()) do
            if item.BrickColor == BrickColor.new("Pine Cone") then
                return tonumber(tool.Name)
            else
                print("You have no shovel equipped!")
                break
            end
        end
    end
end

local function getAxe()
    for i, tool in ipairs(Player.Backpack:GetChildren()) do
        for j, item in ipairs(tool:WaitForChild("toolModel"):GetChildren()) do
            if item.Size == Vector3.new(0.3610214591026306, 0.9464491009712219, 1.0816861391067505) then
                return tonumber(tool.Name)
            else
                print("You have no axe equipped!")
                break
            end
        end
    end
end

local function getCropID(croptype)
    if(croptype:lower() == "wheat") then
        return "rbxassetid://11195659284"
    elseif(croptype:lower() == "carrot") then
        return "rbxassetid://11195658486"
    elseif(croptype:lower() == "pepper") then
        return "rbxassetid://12334856111"
    elseif(croptype:lower() == "cabbage") then
        return "rbxassetid://12334757352"
    elseif(croptype:lower() == "berry") then
        return "rbxassetid://11183450140"
    else
        return "rbxassetid://11195659284"
    end
end

local function getCropType(croptype)
    -- Crop Types: 95 carrot, 107 wheat, 113 berry, 210 cabbage, 211 pepper
    -- Meshid: rbxassetid://11195658486, cork rbxassetid://11195659284, bright green rbxassetid://11183450140, rbxassetid://12334757352, maroon (rbxassetid://12334856111)
    if(croptype:lower() == "wheat") then
        return 107
    elseif(croptype:lower() == "carrot") then
        return 95
    elseif(croptype:lower() == "pepper") then
        return 211
    elseif(croptype:lower() == "cabbage") then
        return 210
    elseif(croptype:lower() == "berry") then
        return 113
    else
        return 107
    end
end

AutoHarvest.Name = "AutoHarvest"
AutoHarvest.Parent = MainFrame
AutoHarvest.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoHarvest.Position = UDim2.new(0.0387657396, 0, 0.748831928, 0)
AutoHarvest.Size = UDim2.new(0.396454066, 0, 0.114661798, 0)
AutoHarvest.Font = Enum.Font.Unknown
AutoHarvest.Text = "Radial Harvest"
AutoHarvest.TextColor3 = Color3.fromRGB(0, 0, 0)
AutoHarvest.TextScaled = true
AutoHarvest.TextSize = 14.000
AutoHarvest.TextWrapped = true

local function GetDistance(p1,p2)
  local Distance = (p1.Position - p2.Position).magnitude
  return Distance
end

local function harvestCrop()
      -- farm:FindFirstChild("plant"):FindFirstChildWhichIsA("MeshPart").MeshId == getCropID(PlantType.Text)
    for i, farm in ipairs(game:GetService("Workspace").farmland:GetChildren()) do
        if farm:FindFirstChild("plant") and GetDistance(farm:FindFirstChild("farmland"), humanoidRootPart) >= -25 and farm then
            print("Successfully harvested a crop")
            local args = {
                [1] = getAxe(),
                [2] = farm
            }
           
            game:GetService("ReplicatedStorage"):WaitForChild("remoteInterface"):WaitForChild("interactions"):WaitForChild("harvest"):FireServer(unpack(args))
        end
    end
end

AutoHarvest.MouseButton1Click:Connect(function()
  print("Harvest All Enabled")
  harvestCrop()
end)

AutoPlant.Name = "AutoPlant"
AutoPlant.Parent = MainFrame
AutoPlant.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
AutoPlant.Position = UDim2.new(0.0387657396, 0, 0.589181542, 0)
AutoPlant.Size = UDim2.new(0.399098098, 0, 0.114661798, 0)
AutoPlant.Font = Enum.Font.Unknown
AutoPlant.Text = "Radial Plant"
AutoPlant.TextColor3 = Color3.fromRGB(0, 0, 0)
AutoPlant.TextScaled = true
AutoPlant.TextSize = 14.000
AutoPlant.TextWrapped = true

local function plantCrop()
  print(PlantType.Text)
  for i, farm in ipairs(game:GetService("Workspace").farmland:GetChildren()) do
      if farm:FindFirstChild("plant") and GetDistance(farm:FindFirstChild("farmland"), humanoidRootPart) >= -25 then
          print("Already planted")
      else
          print("Successfully planted a crop")
          local args = {
              [1] = getShovel(),
              [2] = getCropType(PlantType.Text),
              [3] = farm
          }
          game:GetService("ReplicatedStorage"):WaitForChild("remoteInterface"):WaitForChild("interactions"):WaitForChild("plant"):FireServer(unpack(args))
      end
  end
end

AutoPlant.MouseButton1Click:Connect(function()
  print("Plant All Enabled")
  plantCrop()
end)


PlotBuilder.Name = "PlotBuilder"
PlotBuilder.Parent = MainFrame
PlotBuilder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlotBuilder.Position = UDim2.new(0.0387657396, 0, 0.426271975, 0)
PlotBuilder.Size = UDim2.new(0.39369753, 0, 0.124416009, 0)
PlotBuilder.Font = Enum.Font.Unknown
PlotBuilder.Text = "Toggle Plotbuilder"
PlotBuilder.TextColor3 = Color3.fromRGB(0, 0, 0)
PlotBuilder.TextScaled = true
PlotBuilder.TextSize = 14.000
PlotBuilder.TextWrapped = true

PlotBuilder.MouseButton1Click:Connect(function()
  flag = not flag
end)

local function createPlot(x,z)
  local args = {
              [1] = getShovel(),
              [2] = Vector3.new(x, humanoidRootPart.Position.y - 5, z),
              [3] = 0
          }
  game:GetService("ReplicatedStorage"):WaitForChild("remoteInterface"):WaitForChild("interactions"):WaitForChild("createFarmland"):FireServer(unpack(args))
end

game:GetService('RunService').Stepped:connect(function()
    if flag == true then
        for i = -16, 16, 8 do
            for j = -16, 16, 8 do
                createPlot(humanoidRootPart.Position.x + i,humanoidRootPart.Position.z + j)
            end
        end
  end
end)

Instruction.Name = "Instruction"
Instruction.Parent = MainFrame
Instruction.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Instruction.BackgroundTransparency = 1.000
Instruction.Position = UDim2.new(0.459183753, 0, 0.430000007, 0)
Instruction.Size = UDim2.new(0, 102, 0, 29)
Instruction.Font = Enum.Font.Roboto
Instruction.Text = "Write crop to plant here"
Instruction.TextColor3 = Color3.fromRGB(255, 255, 255)
Instruction.TextScaled = true
Instruction.TextSize = 23.000
Instruction.TextWrapped = true

FarmingLabel.Name = "FarmingLabel"
FarmingLabel.Parent = MainFrame
FarmingLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FarmingLabel.BackgroundTransparency = 1.000
FarmingLabel.Position = UDim2.new(0.0306122489, 0, 0.239999995, 0)
FarmingLabel.Size = UDim2.new(0, 78, 0, 44)
FarmingLabel.Font = Enum.Font.Highway
FarmingLabel.Text = "Farming"
FarmingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
FarmingLabel.TextScaled = true
FarmingLabel.TextSize = 23.000
FarmingLabel.TextWrapped = true
